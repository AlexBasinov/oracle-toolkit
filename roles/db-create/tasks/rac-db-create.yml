# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
- name: rac-db-create | Test whether pmon process by same name already exists
  shell: "set -o pipefail; ps -ef | ( grep pmon || true ) | ( grep -i {{ db_name }} || true ) | ( grep -v grep || true ) | wc -l"
  changed_when: false
  register: pmon_proc
  tags: rac-db-create

- name: rac-db-create | Check if database is already in oratab
  shell: "set -o pipefail; ( grep -i {{ db_name }}: /etc/oratab || true ) | wc -l"
  changed_when: false
  register: check_oratab
  tags: rac-db-create

- name: rac-db-create | Database exists check results
  debug:
    msg: "{{ item }}"
    verbosity: 1
  with_items:
    - "{{ pmon_proc }}"
    - "{{ check_oratab }}"
  tags: rac-db-create

- name: rac-db-create | Adjust instance memory values (not 11.2 or 12.1)
  set_fact:
    sga_target_bytes: "{{ sga_target }}"
    pga_aggtar_bytes: "{{ pga_aggtar }}"
  when: oracle_ver not in ['12.1.0.2.0','11.2.0.4.0']
  tags: db-create

- name: rac-db-create | Adjust instance memory values (11.2 and 12.1)
  set_fact:
    sga_target_bytes: "{{ sga_target | regex_replace('M$','') }}"
    pga_aggtar_bytes: "{{ pga_aggtar | regex_replace('M$','') }}"
  when: oracle_ver in ['12.1.0.2.0','11.2.0.4.0']
  tags: rac-db-create

- name: rac-db-create | Random password for sys
  block:
    - include_role:
        name: pwgen
      vars:
        pwgen_len: 16
        pwgen_chars: "AaBbCc12345"
    - set_fact: pass_sys="{{ pwgen_output.stdout }}"
  tags: rac-db-create

- name: rac-db-create | Random password for system
  block:
    - include_role:
        name: pwgen
      vars:
        pwgen_len: 16
        pwgen_chars: "AaBbCc12345"
    - set_fact: pass_system="{{ pwgen_output.stdout }}"
  tags: rac-db-create

- name: rac-db-create | Random password for pdbAdmin
  block:
    - include_role:
        name: pwgen
      vars:
        pwgen_len: 16
        pwgen_chars: "AaBbCc12345"
    - set_fact: pass_pdbadmin="{{ pwgen_output.stdout }}"
  when: oracle_ver_base != '11.2'
  tags: rac-db-create

- name: rac-db-create | List of database directories to adjust
  set_fact:
    change_dirs:
      - "{{ oracle_base }}/admin"
      - "{{ oracle_base }}/audit"
  tags: rac-db-create

- name: rac-db-create | Adjust directories
  file:
    path: "{{ item.1 }}"
    state: directory
    mode: g+w
    owner: "{{ oracle_user }}"
    group: "{{ oracle_group }}"
  delegate_to: "{{ item.0 }}"
  loop: "{{ query('inventory_hostnames', 'dbasm')|product(change_dirs)|list }}"
  become: true
  become_user: root
  tags: rac-db-create

- name: rac-db-create | Adjust local DBCA directory
  file:
    path: "{{ oracle_base }}/cfgtoollogs/dbca"
    state: directory
    mode: g+w
    owner: "{{ oracle_user }}"
    group: "{{ oracle_group }}"
  become: true
  become_user: root
  tags: rac-db-create

- name: rac-db-create | Create DBCA response file
  template:
    src: rac-dbca.rsp{% if oracle_ver == '11.2.0.4.0' %}.{{ oracle_ver }}{% endif %}.sh.j2
    dest: "{{ swlib_unzip_path }}/dbca_{{ db_name }}.rsp.sh"
    owner: "{{ oracle_user }}"
    group: "{{ oracle_group }}"
  when: pmon_proc.stdout == "0" and check_oratab.stdout == "0"
  become: yes
  become_user: "{{ oracle_user }}"
  tags: rac-db-create

- name: rac-db-create | Run DBCA response file script
  block:
    - name: rac-db-create | Run DBCA
      shell: |
          set -o pipefail
          export PATH={{ oracle_home }}/bin:${PATH}:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin
          sh {{ swlib_unzip_path }}/dbca_{{ db_name }}.rsp.sh
      register: dbca_output
      failed_when: "'Completing Database Creation' not in dbca_output.stdout or '100% complete' not in dbca_output.stdout"
      when: pmon_proc.stdout == "0" and check_oratab.stdout == "0"
      become: yes
      become_user: "{{ oracle_user }}"
      tags: rac-db-create
  rescue:
    - name: rac-db-create | Retrieve DBCA logs
      slurp:
        src: "{{ oracle_base }}/cfgtoollogs/dbca/{{ db_name }}/{{ db_name }}.log"
      register: dbcalog
    - debug: msg="{{ dbcalog['content'] | b64decode }}"

- name: rac-db-create | DBCA output
  debug: msg="{{ dbca_output | default('') }}"
  tags: rac-db-create
