#!/bin/bash
#
# Example: ./rman_delete_arch.sh ORCL 2
#
# Variables
#
ora_inst_name="${1}"                     # Instance name-- should match /etc/oratab
arch_retention_hours="${2}"              # Archivelog retention, in hours
ts="date +%Y-%m-%d_%H-%M-%S"             # Timestamp format
start_ts="$($ts)"                        # Start timestamp
log_dir="{{ logs_dir }}"                 # A directory for the logs
type="ARCHDELETE"                        # Type is archivelog deletion
conn_str="{% if oracle_ver == "11.2.0.4.0" %}/{% else %}/ AS SYSBACKUP{% endif %}" # Oracle connection string
fra_dest="{{ reco_destination }}"        # Fast recovery area location
export NLS_DATE_FORMAT="YYYY-MM-DD HH24:MI:SS"
#
if [[ $# -ne 2 ]]; then
  echo "Usage: $0 ora_inst_name arch_retention_hours" >&1
  exit 1
fi

#
# Check if $log_dir exists; if not, we create it
#
if [[ ! -d "${log_dir}" ]]; then
  if mkdir -p "${log_dir}"; then
    printf "\n\t%s\n\n" "INFO -- $($ts) -- ${log_dir} successfully created."
  else
    printf "\n\t%s\n\n" "ERROR -- $($ts) -- Impossible to create ${log_dir}; we wont be able to log this backup."
  fi
fi
# If FRA is not a file system, add the ASM "+" sign (if not already added)
if [[ "${fra_dest:0:1}" != "/" && "${fra_dest:0:1}" != "+" ]]; then
  fra_dest="+${fra_dest}"
fi
#
# We can now build the output file and log file names
#
outfile="${log_dir}/rman_${start_ts}_${type}.out"
logfile="${log_dir}/rman_${start_ts}_${type}.log"
#
# Set the Oracle env
#
export PATH="/usr/local/bin:${PATH}"
source oraenv <<<"${ora_inst_name}" >/dev/null 2>&1 || exit 1
#
# RMAN archivelog deletion
#
if "${ORACLE_HOME}/bin/rman" >>"${outfile}" <<EOF
  set echo on
  spool log to '${logfile}'
  connect target '${conn_str}'

  configure controlfile autobackup on;
  configure device type disk parallelism 4;

  configure snapshot controlfile name to '${fra_dest}/snapcf_${ora_inst_name}.f';

  run {
    crosscheck archivelog all;
    delete noprompt archivelog all completed before 'SYSDATE-${arch_retention_hours}/24';
  }
  spool log off
EOF
#
# Success or error output with the name of the logfile
#
then
  printf "\n\t%s\n" "INFO -- $($ts) -- ${type} deletion of instance ${ora_inst_name} has been completed successfully."
  printf "\t%s\n\n" "INFO -- $($ts) -- logfile used by this session: ${logfile}"
  ret_code=0
else
  printf "\n\t%s\n\n" "ERROR -- $($ts) --  ${type} deletion of instance ${ora_inst_name} had errors, please have a look at the logfile: ${logfile}"
  ret_code=123
fi
exit ${ret_code}
