# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
- name: DG | Check if the Data Guard configuration already exists
  shell: |
    set -o pipefail
    ({{ oracle_home }}/bin/dgmgrl -silent / "show configuration" || true) | awk '/Configuration Status:/ {getline; print $1}'
  environment:
    ORACLE_HOME: "{{ oracle_home }}"
    ORACLE_SID: "{{ oracle_sid }}"
    PATH: "{{ oracle_home }}/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin"
  become: true
  become_user: "{{ oracle_user }}"
  changed_when: false
  register: current_dg_status
  tags: dg-create

- name: DG | Run Data Guard setup tasks
  when: current_dg_status.stdout | upper != "SUCCESS"
  tags: dg-create
  block:
    - name: DG | Define SQL commands to add standby redo logs
      set_fact:
        sql_for_dg: |
          alter system set dg_broker_start=true sid='*';
          alter system set standby_file_management=auto sid='*';
          begin
            for c in (select bytes, thr, (max(cnt_log) - nvl(max(cnt_sby), 0)) diff
                        from (select bytes, thread# thr, count(*) cnt_log, null cnt_sby from v\$log group by bytes, thread#
                              union all
                              select bytes, thread# thr, null cnt_log, count(*) cnt_sby from v\$standby_log group by bytes, thread#
                              )
                        group by bytes, thr
                      ) loop
              for n in 1..c.diff + 1 loop
                  execute immediate 'alter database add standby logfile thread '||c.thr||' size '||c.bytes;
              end loop;
            end loop;
          end;
          /

    - name: DG | Enable force logging, set DG parameters and create standby redo logs on the primary
      shell: |
        set -o pipefail
        {{ oracle_home }}/bin/sqlplus -s -L / as sysdba <<EOF
        begin
          for c in (select force_logging from v\$database) loop
              if c.force_logging = 'NO' then
                execute immediate 'alter database force logging';
              end if;
          end loop;
        end;
        /
        {{ sql_for_dg }}
        EOF
      environment:
        ORACLE_HOME: "{{ oracle_home }}"
        ORACLE_SID: "{{ oracle_sid }}"
        PATH: "{{ oracle_home }}/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin"
      delegate_to: primary1
      become: true
      become_user: "{{ oracle_user }}"

    - name: DG | Set DG parameters and create standby redo logs on the standby
      shell: |
        set -o pipefail
        {{ oracle_home }}/bin/sqlplus -s -L / as sysdba <<EOF
        {{ sql_for_dg }}
        EOF
      environment:
        ORACLE_HOME: "{{ oracle_home }}"
        ORACLE_SID: "{{ oracle_sid }}"
        PATH: "{{ oracle_home }}/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin"
      become: true
      become_user: "{{ oracle_user }}"

    - name: DG | Reset the password file on both servers
      include_role:
        name: dg-config
        tasks_from: orapw_copy
      when: oracle_ver_base | float > 19.3

    - name: DG | Copy script for creating the Data Guard configuration
      template:
        src: dg-create.j2
        dest: "{{ oracle_home }}/dbs/create_dg_{{ db_name }}.cmd"
        owner: "{{ oracle_user }}"
        group: "{{ oracle_group }}"
        mode: "u=wr,go="
      delegate_to: primary1
      become: true
      become_user: "{{ oracle_user }}"

    - name: DG | Run script to create the Data Guard configuration
      shell: |
        set -o pipefail
        {{ oracle_home }}/bin/dgmgrl <<EOF
        {% if oracle_ver_base | float > 19.3 %}
        connect sys/{{ sys_pass }}
        {% else %}
        connect /
        {% endif %}
        @"{{ oracle_home }}/dbs/create_dg_{{ db_name }}.cmd"
        EOF
      environment:
        ORACLE_HOME: "{{ oracle_home }}"
        ORACLE_SID: "{{ oracle_sid }}"
        PATH: "{{ oracle_home }}/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin"
      delegate_to: primary1
      become: true
      become_user: "{{ oracle_user }}"
      register: dg_create
      no_log: true

    - name: DG | Define SQL commands for pre-19c standby parameter adjustments
      set_fact:
        sql_for_standby: |
          alter system set archive_lag_target=0 sid='*' scope=both;
          alter system set log_archive_max_processes=4 sid='*' scope=both;
          alter system set log_archive_min_succeed_dest=1 sid='*' scope=both;
          alter system set data_guard_sync_latency=0 sid='*' scope=both;
      when: oracle_ver_base | float <= 18.0

    - name: DG | Set other DG parameters on the standby
      shell: |
        set -o pipefail
        {{ oracle_home }}/bin/sqlplus -s -L / as sysdba <<EOF
        {{ sql_for_standby }}
        EOF
      environment:
        ORACLE_HOME: "{{ oracle_home }}"
        ORACLE_SID: "{{ oracle_sid }}"
        PATH: "{{ oracle_home }}/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin"
      become: true
      become_user: "{{ oracle_user }}"
      when: oracle_ver_base | float <= 18.0

    - name: DG | Restart standby if required
      shell: |
        set -o pipefail
        {{ oracle_home }}/bin/sqlplus / as sysdba <<EOF
        shutdown immediate
        startup mount
        EOF
      environment:
        ORACLE_HOME: "{{ oracle_home }}"
        ORACLE_SID: "{{ oracle_sid }}"
        PATH: "{{ oracle_home }}/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin"
      become: true
      become_user: "{{ oracle_user }}"
      when: "'database instance restart required' in dg_create.stdout"

    - name: DG | Enable standby database after restart to clear warnings
      shell: |
        set -o pipefail
        {{ oracle_home }}/bin/dgmgrl / <<EOF
        enable database {{ standby_name }};
        host sleep 60;
        show database verbose {{ standby_name }};
        EOF
      environment:
        ORACLE_HOME: "{{ oracle_home }}"
        ORACLE_SID: "{{ oracle_sid }}"
        PATH: "{{ oracle_home }}/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin"
      become: true
      become_user: "{{ oracle_user }}"
      when: "'database instance restart required' in dg_create.stdout"

- name: DG | Capture Data Guard configuration
  shell: |
    set -o pipefail
    {{ oracle_home }}/bin/dgmgrl / <<EOF
    show configuration verbose;
    EOF
  environment:
    ORACLE_HOME: "{{ oracle_home }}"
    ORACLE_SID: "{{ oracle_sid }}"
    PATH: "{{ oracle_home }}/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin"
  become: true
  become_user: "{{ oracle_user }}"
  changed_when: false
  register: dg_config
  tags: dg-create

- name: DG | Show Data Guard configuration
  debug:
    var: dg_config.stdout_lines
    verbosity: 0
  tags: dg-create
