# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
- name: hugepages | get Hugepagesize from memory
  shell: set -o pipefail; ( cat /proc/meminfo | ( grep Hugepagesize || true ) | cut -d " " -f8 ) || true
  register: v_Hugepagesize
  changed_when: false

- name: hugepages | Update the vm.nr_hugepages sysctl value
  sysctl:
    name: "vm.nr_hugepages"
    value: "{{ ((ansible_memtotal_mb * (ram_pct_used | int) / 100) * 1024 / (v_Hugepagesize.stdout | int)) | round(0, 'ceil') | int }}"
    state: present
    sysctl_set: true
    reload: true
    ignoreerrors: true

- name: hugepages | Capture transparent hugepage status
  shell: ( cat /sys/kernel/mm/transparent_hugepage/enabled ) || true
  register: checkTPH
  ignore_errors: true
  changed_when: false

- name: hugepages | Update Grub default config and disable at run-time
  shell: |
    grubby --args="transparent_hugepage=never" --update-kernel=ALL
    echo 'never' > /sys/kernel/mm/transparent_hugepage/enabled
    echo 'never' > /sys/kernel/mm/transparent_hugepage/defrag
  when: checkTPH.stdout == "[always] madvise never" or checkTPH.stdout == "always [madvise] never"

- name: hugepages | Check THPs are allocated
  shell: grep -q -E '^AnonHugePages:[[:space:]]+0[[:space:]]kB$' /proc/meminfo || echo reboot
  register: checkTHPreboot
  ignore_errors: true
  changed_when: false

- name: hugepages | Recommend reboot if THPs are allocated
  debug:
    msg: "WARNING: A reboot is required to disable transparent huge pages"
    verbosity: 0
  when: checkTHPreboot.stdout == "reboot"

# Setting vm.hugetlb_shm_group to the ID of the "oinstall" group to allow its members to create
# SysV shared memory segment using hugetlb page.
# By default only the root user has permissions to create shared memory segments.
# This is needed to prevent the occurrence of "ORA-27125: unable to create shared memory segment" error.
- name: hugepages | Set hugetlb_shm_group to the ID of the oinstall group
  sysctl:
    name: vm.hugetlb_shm_group
    value: "{{ oracle_groups | selectattr('group', 'match', 'oinstall') | map(attribute='gid') | first }}"
    state: present
    reload: true
  become: true
  when:
    - ansible_distribution == 'RedHat'
    - ansible_distribution_major_version == '9'
