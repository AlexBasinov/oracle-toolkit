# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
- name: validate_passwords | Fetch Oracle metrics user password
  command: gcloud --quiet secrets versions access {{ oracle_metrics_secret }}
  register: agent_pass_result
  changed_when: false
  failed_when: false # the command's exit code is checked in a separate task to show a clear error message.
  no_log: true # avoids leaking sensitive values in logs.
  when:
    - install_workload_agent | bool
    - oracle_metrics_secret | length > 0
  tags: validate-db-passwords

- name: validate_passwords | Fail if gcloud command failed
  fail:
    msg: "Command failed with rc={{ agent_pass_result.rc }}: stderr={{ agent_pass_result.stderr }}"
  when:
    # Skip this task if the fetch task was skipped.
    # agent_pass_result.skipped will be true if the fetch task didn't run due to 'when:' conditions.
    # We use default(false) in case 'skipped' is not set (e.g. if the task ran successfully).
    - not (agent_pass_result.skipped | default(false))
    - agent_pass_result.rc != 0
  tags: validate-db-passwords

- name: validate_passwords | Validate Oracle metrics user password
  ansible.builtin.assert:
    that:
      - agent_pass_result.stdout | length >= 8
      # Must contain at least one uppercase letter
      - agent_pass_result.stdout is search('[A-Z]')
      # Must contain at least one lowercase letter
      - agent_pass_result.stdout is search('[a-z]')
      # Must contain at least one digit
      - agent_pass_result.stdout is search('[0-8]')
      # Must contain at least one special character
      - agent_pass_result.stdout is search('[#$@%*_+=-]')
      # Must not contain common disallowed words (e.g., 'oracle') (No change needed here)
      - agent_pass_result.stdout | lower is not search('oracle')
    fail_msg: "Oracle metrics user password failed Oracle complexity requirements. Check length (min 8), case mix, digits, and special characters."
    success_msg: "Oracle metrics user password passed complexity validation."
  when:
    - not (agent_pass_result.skipped | default(false))
    - agent_pass_result.rc == 0

- name: validate_passwords | Fetch database password
  command: gcloud --quiet secrets versions access {{ db_password_secret }}
  register: sys_pass_result
  changed_when: false
  failed_when: false # the command's exit code is checked in a separate task to show a clear error message.
  no_log: true
  when: db_password_secret | length > 0
  tags: validate-db-passwords

- name: validate_passwords | Fail if gcloud command failed
  fail:
    msg: "Command failed with rc={{ sys_pass_result.rc }}: stderr={{ sys_pass_result.stderr }}"
  when:
    # Skip this task if the fetch task was skipped.
    # sys_pass_result.skipped will be true if the fetch task didn't run due to 'when:' conditions.
    # We use default(false) in case 'skipped' is not set (e.g. if the task ran successfully).
    - not (sys_pass_result.skipped | default(false))
    - sys_pass_result.rc != 0
  tags: validate-db-passwords

- name: validate_passwords | Validate database password
  ansible.builtin.assert:
    that:
      # Password must be at least 8 characters long
      - sys_pass_result.stdout | length >= 8
      # Must contain at least one uppercase letter
      - sys_pass_result.stdout is search('[A-Z]')
      # Must contain at least one lowercase letter
      - sys_pass_result.stdout is search('[a-z]')
      # Must contain at least one digit
      - sys_pass_result.stdout is search('[0-8]')
      # Must contain at least one special character (adjust list as needed)
      - sys_pass_result.stdout is search('[#$@%*_+=-]')
      # This line was already correct, using the boolean 'is not search'
      # Must not contain common disallowed words (e.g., 'oracle')
      - sys_pass_result.stdout | lower is not search('oracle')
    fail_msg: "Database password failed Oracle complexity requirements. Check length (min 8), case mix, digits, and special characters."
    success_msg: "Database password passed complexity validation."
  when:
    - not (sys_pass_result.skipped | default(false))
    - sys_pass_result.rc == 0
  tags: validate-db-passwords

